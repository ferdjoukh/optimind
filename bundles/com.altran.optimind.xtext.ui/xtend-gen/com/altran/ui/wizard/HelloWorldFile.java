/**
 * generated by xtext 2.15.0
 */
package com.altran.ui.wizard;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.ui.wizard.template.AbstractFileTemplate;
import org.eclipse.xtext.ui.wizard.template.FileTemplate;
import org.eclipse.xtext.ui.wizard.template.IFileGenerator;
import org.eclipse.xtext.ui.wizard.template.StringTemplateVariable;

@FileTemplate(label = "Binomial Workflow", icon = "file_template.png", description = "Create a Workflow based on Binomial Template.")
@SuppressWarnings("all")
public final class HelloWorldFile extends AbstractFileTemplate {
  private final StringTemplateVariable workflow = this.text("Workflow name:", "MyWorkflow");
  
  @Override
  protected void updateVariables() {
    this.workflow.setValue(this.getName());
  }
  
  @Override
  public void generateFiles(final IFileGenerator generator) {
    StringConcatenation _builder = new StringConcatenation();
    String _folder = this.getFolder();
    _builder.append(_folder);
    _builder.append("/");
    String _name = this.getName();
    _builder.append(_name);
    _builder.append(".optimind");
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("Workflow ");
    _builder_1.append(this.workflow);
    _builder_1.append(" {");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t");
    _builder_1.append("Language Python");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("BaseTask ");
    _builder_1.append(this.workflow, "\t");
    _builder_1.append(" {");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t\t");
    _builder_1.append("LibraryTask bidule { ");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("Setter n type int value \"3\"");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("Output fact_n type int");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("Libraryfunction Factorial\t\t\t\t\t\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}\t\t\t");
    _builder_1.newLine();
    generator.generate(_builder, _builder_1);
  }
}
