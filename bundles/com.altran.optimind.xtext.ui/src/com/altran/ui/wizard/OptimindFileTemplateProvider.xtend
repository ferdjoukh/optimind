/*
 * generated by xtext 2.15.0
 */
package com.altran.ui.wizard


import org.eclipse.xtext.ui.wizard.template.FileTemplate
import org.eclipse.xtext.ui.wizard.template.IFileGenerator
import org.eclipse.xtext.ui.wizard.template.IFileTemplateProvider

/**
 * Create a list with all file templates to be shown in the template new file wizard.
 * 
 * Each template is able to generate one or more files.
 */
class OptimindFileTemplateProvider implements IFileTemplateProvider {
	
	override getFileTemplates() {
		#[new EmptyWorkflow , new HelloWorldFile]
		//#[new HelloWorldFile]
	}
}

@FileTemplate(label="Empty Workflow", icon="file_template.png", description="Create an empty Optimind Workflow.")
final class EmptyWorkflow {
	val workflow = text("Workflow name:", "MyWorkflow")
	
	override protected updateVariables() {
		workflow.value = name		
	}
	
	override generateFiles(IFileGenerator generator) {
		generator.generate('''«folder»/«name».optimind''', '''
			Workflow «workflow» {
				Language Python
				BaseTask «workflow» {
				
				}
			}
		''')
	}
}

@FileTemplate(label="Binomial Workflow", icon="file_template.png", description="Create a Workflow based on Binomial Template.")
final class HelloWorldFile {
	val workflow = text("Workflow name:", "MyWorkflow")
	//val helloName = combo("Hello Name:", #["Xtext", "World", "Foo", "Bar"], "The name to say 'Hello' to")

	override protected updateVariables() {
		workflow.value = name		
	}

	override generateFiles(IFileGenerator generator) {
		generator.generate('''«folder»/«name».optimind''', '''
			Workflow «workflow» {
				Language Python
				BaseTask «workflow» {
					LibraryTask bidule { 
						Setter n type int value "3"
						Output fact_n type int
						Libraryfunction Factorial							
					}
				}
			}			
		''')
	}
}
